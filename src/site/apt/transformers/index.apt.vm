#*
 *    Copyright (C) 2011 Nadim Benabdenbi <nadim.benabdenbi@gmail.com>
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 *#
    ---
    Transformers
    ---
    Nadim Benabdenbi
    ---
    YYYY-MM-DD
    ---

Transformers

* Transformation Flow
  
  The transformation flow consists on a succession {{{../apidocs/com/google/code/maven/plugin/http/client/transformer/Transformer.html}tranformer}} execution.
  
  Each transformer transforms a source object to a target object.
  
  The transformation flow executes the transformers list and each resulting transformation execution (e.g. the target object) becomes the source object of the next transformation.
  
  The transformation flow begins with the {{{http://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/HttpResponse.html}HttpResponse}} bean.
  

* Available Transformers

    @see the {{{./examples/index.html}examples page}} for concrete usage cases.

** HttpResponse Transformers

      [[1]] {{{../apidocs/com/google/code/maven/plugin/http/client/transformer/ResponseToString.html}ResponseToString}}: transforms the {{{http://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/HttpResponse.html}HttpResponse}} to a java.lang.String containing the underlying entity content.

      [[2]] {{{../apidocs/com/google/code/maven/plugin/http/client/transformer/ResponseToReader.html}ResponseToReader}}: transforms the {{{http://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/HttpResponse.html}HttpResponse}} to a java.io.BufferedReader on the underlying entity content.

      [[3]] {{{../apidocs/com/google/code/maven/plugin/http/client/transformer/ResponseConsolePrinter.html}ResponseConsolePrinter}}: dumps the underlying {{{http://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/HttpResponse.html}HttpResponse}} entity content to the console (returns null).

      [[4]] {{{../apidocs/com/google/code/maven/plugin/http/client/transformer/ResponseToFileResource.html}ResponseToFileResource}}: transforms the underlying {{{http://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/HttpResponse.html}HttpResponse}} entity content to the target {{{http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/core/io/Resource.html}Resource}}. 
      
** Resource Transformers

      [[1]] {{{../apidocs/com/google/code/maven/plugin/http/client/transformer/XsltTransformer.html}XsltTransformer}}: transforms a source {{{http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/core/io/Resource.html}Resource}} to a target {{{http://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/HttpResponse.html}HttpResponse}} to a target {{{http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/core/io/Resource.html}Resource}} using an xsl style sheet (requires a TransformerFactory on the classpath). 

      [[2]] {{{../apidocs/com/google/code/maven/plugin/http/client/transformer/JiraRssLinkedIssuesEnricher.html}JiraRssLinkedIssuesEnricher}}: builds a target jira rss {{{http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/core/io/Resource.html}Resource}} enriched with linked issues from a source jira rss {{{http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/core/io/Resource.html}Resource}}   

      [[3]] {{{../apidocs/com/google/code/maven/plugin/http/client/transformer/GenericTransformer.html}GenericTransformer}}: permits any third party transformer invocation (underlying transformer is built as a standard spring bean.

